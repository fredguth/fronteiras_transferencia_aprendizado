Taskonomy: Disentangling Task Transfer Learning
Do visual tasks have a relationship, or are they unrelated? For instance, could having surface normals simplify estimating the depth of an image? Intuition answers
these questions positively, implying existence of a structure
among visual tasks. Knowing this structure has notable values; it is the concept underlying transfer learning and provides a principled way for identifying redundancies across
tasks, e.g., to seamlessly reuse supervision among related
tasks or solve many tasks in one system without piling up
the complexity.
We proposes a fully computational approach for modeling the structure of space of visual tasks. This is done via
finding (first and higher-order) transfer learning dependencies across a dictionary of twenty six 2D, 2.5D, 3D, and
semantic tasks in a latent space. The product is a computational taxonomic map for task transfer learning. We study
the consequences of this structure, e.g. nontrivial emerged
relationships, and exploit them to reduce the demand for
labeled data. We provide a set of tools for computing and
probing this taxonomical structure including a solver users
can employ to find supervision policies for their use cases.

X to Y when many pairs of (x, y) s.t. x ∈ X, y ∈ Y are
given as training data. This is usually referred to as fully supervised learning and often leads to problems being solved
in isolation. Siloing tasks makes training a new task or a
comprehensive perception system a Sisyphean challenge,
whereby each task needs to be learned individually from
scratch. Doing so ignores their quantifiably useful relationships leading to a massive labeled data requirement.
Alternatively, a model aware of the relationships among
tasks demands less supervision, uses less computation, and
behaves in more predictable ways. Incorporating such
a structure is the first stepping stone towards developing provably efficient comprehensive/universal perception
models [32, 4], i.e. ones that can solve a large set of tasks
before becoming intractable in supervision or computation
demands. However, this task space structure and its effects
